/*jshint esversion:6 */
let start,following,followers,exceptions,ME,console;
start.collection(following). 
	drop(followers).  //ignore users I am already following
	twitterUser().
	column('screen_name').
	data().join().
	unfollow(); //follow them


///////////////////////////////////////////////////////////////////////////////
//unfollow
///////////////////////////////////////////////////////////////////////////////
exceptions = ['hackernoon','JavaScriptDaily'];
following. 
	drop(followers).  //ignore users I am already following
	twitterUser(). //we need to translate ids to screen names so we can eliminate the exceptions
	column('screen_name').
	drop(exceptions).
	unfollow();
	
///////////////////////////////////////////////////////////////////////////////
//word cloud
///////////////////////////////////////////////////////////////////////////////
start.followers(ME,1000).
column('description').toLowerCase().
terms().dropStopwords('term').
sortDesc('count').head(50).wordCloud('term','count').save('word-cloud.html');

///////////////////////////////////////////////////////////////////////////////
//who to follow
///////////////////////////////////////////////////////////////////////////////
start.searchTweets('javascript react',10000,{result_type:'mixed'}).
filter((tweet)=>!tweet.text.startsWith('RT @')). //filter out retweets
map((tweet)=>tweet.user). //get users of the tweets
save('react_tweets_users.json').
groupBy('screen_name').
sortDesc((item)=>item.data[0].followers_count).//order by followers
head(20).
do((users)=>{
	console.log('screen_name, tweets in search, followers, following, statuses, description');
	users.forEach((user)=>console.log(
		user.key + ':', //screen_name
		user.data.length,
		user.data[0].followers_count,
		user.data[0].favourites_count,
		user.data[0].statuses_count,
		user.data[0].description));
});
/////////////////////////////////////////////////////////////////////////////////
start.followers(ME,1000).
column('description').toLowerCase().
save('followers-description.json')
terms().dropStopwords('term').
sortDesc('count').head(50).wordCloud('term','count').save('word-cloud.html');
